sources:
  - name: binutils
    subdir: 3rdparty
    git: 'https://sourceware.org/git/binutils-gdb.git'
    tag: 'binutils-2_37'
    version: '2.37'
    tools_required:
    - host-autoconf-v2.69
    - host-automake-v1.16
    regenerate:
    - args: ['cp', '@BUILD_ROOT@/tools/host-automake-v1.16/share/automake-1.16/config.sub',
        '@THIS_SOURCE_DIR@/']
  - name: gcc
    subdir: 3rdparty
    git: 'https://gcc.gnu.org/git/gcc.git'
    tag: 'releases/gcc-11.2.0'
    version: '11.2.0'
    tools_required:
    - host-autoconf-v2.69
    - host-automake-v1.16
    regenerate:
    - args: ['./contrib/download_prerequisites']
      workdir: '@THIS_SOURCE_DIR@'
    - args: ['cp', '@BUILD_ROOT@/tools/host-automake-v1.16/share/automake-1.16/config.sub',
        '@THIS_SOURCE_DIR@/']
    - args: ['cp', '@BUILD_ROOT@/tools/host-automake-v1.16/share/automake-1.16/config.sub',
        '@THIS_SOURCE_DIR@/gmp-6.1.0/configfsf.sub']
    - args: ['cp', '@BUILD_ROOT@/tools/host-automake-v1.16/share/automake-1.16/config.sub',
        '@THIS_SOURCE_DIR@/isl-0.18/config.sub']
    - args: ['cp', '-f', '@BUILD_ROOT@/tools/host-automake-v1.16/share/automake-1.16/config.sub',
        '@THIS_SOURCE_DIR@/mpc-1.0.3/config.sub']
    - args: ['cp', '@BUILD_ROOT@/tools/host-automake-v1.16/share/automake-1.16/config.sub',
        '@THIS_SOURCE_DIR@/mpfr-3.1.6/config.sub']
    - args: ['autoconf']
      workdir: '@THIS_SOURCE_DIR@/gcc'
    - args: ['autoconf']
      workdir: '@THIS_SOURCE_DIR@/libstdc++-v3'
  
  - name: ninex
    git: 'https://git.sr.ht/~cleanbaja/9x'
    branch: 'new_start'
    disable_shallow_fetch: true
    tools_required:
      - host-autoconf-v2.69
      - host-automake-v1.16
    regenerate:
      - args: ['./autogen.sh']
        environ:
          NOCONFIGURE: 'yes'  

  - name: limine
    subdir: 3rdparty
    git: 'https://github.com/limine-bootloader/limine.git'
    tag: 'v3.0'
    version: '3.0'
    tools_required:
      - host-autoconf-v2.69
      - host-automake-v1.16
    regenerate:
      - args: ['./autogen.sh']
        environ:
          NOCONFIGURE: 'yes' 

  - name: mlibc
    git: 'https://github.com/cleanbaja/mlibc.git'
    branch: 'master'
    commit: '9f15454be1b0e4883d822b135c9a5fd53786bbf5'
    rolling_version: true
    version: '0.0pl@ROLLING_ID@'  

  - name: dash
    subdir: ports
    git: 'git://git.kernel.org/pub/scm/utils/dash/dash.git'
    tag: 'v0.5.8'
    version: 'v0.5.8'
    tools_required:
      - host-autoconf-v2.69
      - host-automake-v1.16
    regenerate:
      - args: ['./autogen.sh']

tools:
  - name: host-autoconf-v2.69
    source:
      name: autoconf-v2.69
      subdir: 3rdparty
      url: https://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.xz
      format: tar.xz
      extract_path: autoconf-2.69
      version: '2.69'
    configure:
    - args: ['@THIS_SOURCE_DIR@/configure', '--prefix=@PREFIX@']
    compile:
    - args: ['make', '-j@PARALLELISM@']
    install:
    - args: ['make', 'install']

  - name: host-automake-v1.16
    source:
      name: automake-v1.16
      subdir: 3rdparty
      git: https://git.savannah.gnu.org/git/automake.git
      tag: v1.16.5
      tools_required:
        - host-autoconf-v2.69
      regenerate:
        - args: [./bootstrap]
    tools_required:
      - host-autoconf-v2.69
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - --prefix=@PREFIX@
        - MAKEINFO=/bin/true
    compile:
      - args: [make, -j@PARALLELISM@]
    install:
      - args: [make, install]
      # Stop aclocal from complaining.
      - args: [ln, -sf, '@PREFIX@/share/aclocal-1.16', '@PREFIX@/share/aclocal']
  
  - name: host-libtool
    exports_aclocal: true
    source:
      name: libtool
      subdir: ports
      git: http://git.savannah.gnu.org/r/libtool.git
      tag: v2.4.5
      tools_required:
      - host-autoconf-v2.69
      - host-automake-v1.15
      regenerate:
        # libtool's ./bootstrap does a shallow clone with insufficient depth.
        - args: [git, submodule, update, --init]
        - args: [./bootstrap]
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - --prefix=@PREFIX@
    compile:
      - args: [make, -j@PARALLELISM@]
    install:
      - args: [make, install]

  - name: host-image-create
    source:
      subdir: '3rdparty'
      git: 'https://github.com/qookei/image_create'
      branch: 'master'
    configure:
    - args: ['chmod', '+x', '@THIS_SOURCE_DIR@/image_create.sh']
    install:
    - args: ['cp', '@THIS_SOURCE_DIR@/image_create.sh', '@PREFIX@/image_create.sh']

  - name: host-binutils
    from_source: binutils
    configure:
    - args:
      - '@THIS_SOURCE_DIR@/configure'
      - --prefix=@PREFIX@
      - --target=x86_64-ninex
      - --with-sysroot=@SYSROOT_DIR@
      # On recent compilers, binutils 2.26 causes implicit-fallthrough warnings, among others.
      - --disable-werror
      - --enable-targets=x86_64-elf,x86_64-pe
      # -g blows up the binary size.
      - CFLAGS=-O2 -pipe
    compile:
    - args: [make, -j@PARALLELISM@, all-binutils, all-gas, all-ld]
    install:
    - args: [make, install-strip-binutils, install-strip-gas, install-strip-ld]
  
  - name: host-gcc
    from_source: gcc
    tools_required:
      - tool: host-binutils
        recursive: true
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        - '--target=x86_64-ninex'
        - '--with-pkgversion="CrecentOS Host Tools for Unix"'
        - '--with-sysroot=@SYSROOT_DIR@'
        - '--enable-languages=c,c++'
        - '--disable-multilib'
        - '--enable-initfini-array'
        # -g blows up GCC's binary size.
        - 'CFLAGS=-O2 -pipe'
        - 'CXXFLAGS=-O2 -pipe'
    stages:
      - name: compiler
        pkgs_required:
          - mlibc-headers
        compile:
          - args: ['make', '-j@PARALLELISM@', 'all-gcc']
        install:
          - args: ['make', 'install-gcc']
          # GCC does *not* look for target-prefixed LD/AS.
          # Instead, it searches a list of prefix directories. Link AS/LD to make it happy.
          - args: ['mkdir', '-p', '@PREFIX@/x86_64-ninex/bin']
          - args: ['ln', '-sf', '../../../host-binutils/x86_64-ninex/bin/as',
                               '@PREFIX@/x86_64-ninex/bin/as']
          - args: ['ln', '-sf', '../../../host-binutils/x86_64-ninex/bin/ld',
                               '@PREFIX@/x86_64-ninex/bin/ld']
      - name: libgcc
        tools_required:
          - tool: host-gcc
            stage_dependencies: [compiler]
        pkgs_required:
          - mlibc
        compile:
          - args: ['make', '-j@PARALLELISM@', 'all-target-libgcc']
        install:
          - args: ['make', 'install-strip-target-libgcc']

      - name: libstdc++
        tools_required:
          - tool: host-gcc
            stage_dependencies: [libgcc]
        compile:
          - args: ['make', '-j@PARALLELISM@', 'all-target-libstdc++-v3']
        install:
          - args: ['make', 'install-strip-target-libstdc++-v3']


  - name: host-limine
    from_source: limine
    tools_required:
      - host-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        - 'TOOLCHAIN=x86_64-ninex'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install-strip']
      # image_create wants limine in share, but we put it in bin, so copy it over
      - args: ['cp', '@PREFIX@/bin/limine-deploy', '@PREFIX@/share/limine/limine-deploy']

tasks:
  - name: make-iso
    tools_required:
      - host-limine
    pkgs_required:
      - kernel
      - mlibc
      - hello
      - dash
    artifact_files:
      - name: 'ninex.iso'
        path: '@BUILD_ROOT@'
    args:
      - '@SOURCE_ROOT@/scripts/build_iso'
      - '@BUILD_ROOT@'
    workdir: '@BUILD_ROOT@'

  # yoink'd from bootstrap-managarm, credits to them!
  - name: initialize-empty-image
    tools_required:
      - host-limine
      - host-image-create
    args: |
      # TODO: Offer libguestfs as a choice, like managarm
      @BUILD_ROOT@/tools/host-image-create/image_create.sh \
      -oimage \
      -s256M \
      -pgpt \
      -text2 \
      -llimine \
      -be
    environ:
      'LIMINE_PATH': '@BUILD_ROOT@/tools/host-limine/share/limine'
    workdir: '@BUILD_ROOT@'

  - name: make-image
    pkgs_required:
      - kernel
      - mlibc
      - hello
      - dash
    args: ['@SOURCE_ROOT@/scripts/update_image', '@BUILD_ROOT@']
    workdir: '@BUILD_ROOT@'

  - name: xz-image
    tasks_required:
      - task: make-image
        order_only: true
    artifact_files:
      - name: image.xz
        path: '@BUILD_ROOT@'
    args: ['xz', '--fast', '--keep', '@BUILD_ROOT@/image']

  - name: qemu
    tasks_required:
      - task: make-image
        order_only: true
    args: ['@SOURCE_ROOT@/scripts/run_vm', '-i', '@BUILD_ROOT@/image', '-f', 'hd']

  - name: qemu-kvm
    tasks_required:
      - task: make-image
        order_only: true
    args: ['@SOURCE_ROOT@/scripts/run_vm', '-i', '@BUILD_ROOT@/image', '-f', 'hd', '-k']

packages:
  - name: kernel
    from_source: ninex
    tools_required:
      - host-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--target=x86_64-ninex'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
      - args: ['cp', '@THIS_SOURCE_DIR@/misc/limine.cfg', '@THIS_COLLECT_DIR@/boot/limine.cfg']
  
  - name: mlibc-headers
    from_source: mlibc
    implict_package: true
    configure:
    - args:
      - 'meson'
      - '--cross-file'
      - '@SOURCE_ROOT@/build_files/cross_file.txt'
      - '--prefix=/usr'
      - '-Dheaders_only=true'
      - '@THIS_SOURCE_DIR@'
    build:
      - args: [ninja]
      - args: [ninja, install]
        environ:
            DESTDIR: '@THIS_COLLECT_DIR@'
  
  - name: mlibc
    from_source: mlibc
    tools_required:
      - tool: host-gcc
        stage_dependencies: [compiler]
    implict_package: true
    pkgs_required:
      - mlibc-headers
    configure:
      - args:
        - 'meson'
        - '--cross-file'
        - '@SOURCE_ROOT@/build_files/cross_file.txt'
        - '--prefix=/usr'
        - '--libdir=lib'
        - '--buildtype=debugoptimized'
        - '-Dmlibc_no_headers=true'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: hello
    source:
      subdir: 'ports'
      url: 'https://github.com/lowlevelmemes/hello/archive/1.2a.tar.gz'
      format: 'tar.gz'
      extract_path: 'hello-1.2a'
      patch-path-strip: 3
    tools_required:
      - host-gcc
    build:
      - args: ['make', 'CC=x86_64-ninex-gcc', '-j@PARALLELISM@']
        workdir: '@THIS_SOURCE_DIR@'
      - args: ['make', 'PREFIX=/usr', 'DESTDIR=@THIS_COLLECT_DIR@', 'install']
        workdir: '@THIS_SOURCE_DIR@'

  - name: dash
    from_source: dash
    tools_required:
      - host-gcc
      - host-autoconf-v2.69
      - host-automake-v1.16
    pkgs_required:
      - mlibc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-ninex'
        - '--prefix=/usr'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'DESTDIR=@THIS_COLLECT_DIR@', 'install']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/bin']
      - args: ['cp', '@THIS_COLLECT_DIR@/usr/bin/dash', '@THIS_COLLECT_DIR@/usr/bin/sh']
      - args: ['ln', '-s', '/usr/bin/dash', '@THIS_COLLECT_DIR@/bin/dash']
      - args: ['ln', '-s', '/usr/bin/sh', '@THIS_COLLECT_DIR@/bin/sh']

